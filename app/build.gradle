apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion 28
  defaultConfig {
    applicationId "com.wellsen.mandiri.whatthehack.android"
    minSdkVersion 23
    targetSdkVersion 28
    multiDexEnabled true
    versionCode 1
    versionName "1.0"
    vectorDrawables.useSupportLibrary = true
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    buildConfigField "String", "ONBOARDING_BASE_URL", "\"" + getOnboardingBaseUrl() + "\""
    buildConfigField "String", "API_GATEWAY_BASE_URL", "\"" + getApiGatewayBaseUrl() + "\""
  }
  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  dataBinding {
    enabled = true
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'androidx.core:core-ktx:1.0.2'

  implementation 'androidx.appcompat:appcompat:1.0.2'
  implementation 'com.google.android.material:material:1.0.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation 'androidx.recyclerview:recyclerview:1.0.0'

  implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
  implementation 'androidx.annotation:annotation:1.1.0'

  implementation "org.koin:koin-androidx-scope:$koin_version"
  implementation "org.koin:koin-androidx-viewmodel:$koin_version"
  implementation "org.koin:koin-androidx-ext:$koin_version"

  implementation 'com.karumi:dexter:5.0.0'

  implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
  implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
  implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

  implementation 'com.jakewharton.timber:timber:4.7.1'

  implementation "com.github.bumptech.glide:glide:$glide_version"
  kapt "com.github.bumptech.glide:compiler:$glide_version"

  implementation 'id.zelory:compressor:2.1.0'

  implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
  implementation 'io.reactivex.rxjava2:rxjava:2.2.10'

  testImplementation 'junit:junit:4.12'
  testImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test:runner:1.2.0'
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

/*
 * *
 *  * Created by Wellsen on 7/15/19 1:30 PM
 *  * for Mandiri What The Hack Hackathon
 *  * Copyright (c) 2019 . All rights reserved.
 *  * Last modified 7/14/19 10:01 AM
 *
 */

// If you're using the Android Databinding library,
// you may want to increase the number of errors that javac will print.
// When Dagger prints an status, databinding compilation will halt and sometimes print more than 100 errors,
// which is the default amount for javac. For more information, see Issue 306.
gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
  }
}

def getOnboardingBaseUrl() {
  Properties properties = new Properties()
  properties.load(project.rootProject.file('local.properties').newDataInputStream())
  return properties.getProperty("ONBOARDING_BASE_URL")
}

def getApiGatewayBaseUrl() {
  Properties properties = new Properties()
  properties.load(project.rootProject.file('local.properties').newDataInputStream())
  return properties.getProperty("API_GATEWAY_BASE_URL")
}
